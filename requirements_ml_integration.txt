# Enhanced Requirements for ML Model Integration
# GeoSpatialAI Conservation Technology Platform
# Phase 1: Foundation Models Integration

# ============================================================================
# EXISTING CORE DEPENDENCIES (from requirements.txt)
# ============================================================================

# Core geospatial libraries
geopandas>=0.13.0
shapely>=2.0.0
pyproj>=3.4.0
rasterio>=1.3.8
rioxarray>=0.13.0
xarray>=2022.12.0

# Visualization and cartography
matplotlib>=3.6.0
contextily>=1.3.0
cartopy>=0.21.0
folium>=0.14.0
plotly>=5.11.0
seaborn>=0.11.0

# Interactive dashboards
streamlit>=1.28.0

# Analysis and classification
mapclassify>=2.4.0
scikit-learn>=1.1.0
scipy>=1.9.0

# Spatial statistics
libpysal>=4.7.0
esda>=2.4.0

# Network analysis
networkx>=2.8.0
osmnx>=1.6.0

# Deep learning
tensorflow>=2.13.0

# Multi-objective optimization
pymoo>=0.6.0

# Statistical analysis
statsmodels>=0.14.0

# Interpolation methods
pykrige>=1.6.0

# Utilities
requests>=2.28.0
pandas>=1.5.0
numpy>=1.21.0

# Jupyter environment
jupyter>=1.0.0
ipykernel>=6.0.0

# Optional: For advanced features
rasterstats>=0.17.0
earthpy>=0.9.0

# ============================================================================
# NEW ML MODEL INTEGRATION DEPENDENCIES
# ============================================================================

# PHASE 1: Foundation Models
# ----------------------------------------------------------------------------

# YOLOv8 Wildlife Detection
ultralytics>=8.0.0              # YOLOv8 framework for object detection
torch>=2.0.0                    # PyTorch backend for YOLO
torchvision>=0.15.0             # Computer vision utilities
pillow>=9.0.0                   # Image processing
opencv-python>=4.8.0           # Computer vision operations

# BirdNET Audio Classification
librosa>=0.10.0                 # Audio processing and analysis
soundfile>=0.12.0               # Audio file I/O
tensorflow-hub>=0.14.0         # TensorFlow Hub for model loading
resampy>=0.4.0                  # Audio resampling
audioread>=3.0.0                # Audio file reading

# Segment Anything Model (SAM)
segment-anything>=1.0.0         # Meta AI segmentation model
timm>=0.9.0                     # Image models for SAM backbone
supervision>=0.14.0             # Computer vision utilities

# PRITHVI-100M Earth Observation
transformers>=4.30.0            # Hugging Face transformers
datasets>=2.14.0                # Dataset utilities
accelerate>=0.20.0              # Model acceleration
safetensors>=0.3.0              # Safe tensor serialization

# ============================================================================
# ENHANCED GEOSPATIAL & EARTH OBSERVATION
# ============================================================================

# Satellite Data Processing
satpy>=0.42.0                   # Satellite data processing
pyresample>=1.27.0              # Satellite data resampling
dask>=2023.6.0                  # Parallel computing for large datasets
zarr>=2.15.0                    # Chunked array storage

# Earth Engine Integration
earthengine-api>=0.1.0          # Google Earth Engine Python API
geemap>=0.22.0                  # Interactive Earth Engine mapping

# Enhanced Spatial Analysis
pylandstats>=2.4.0              # Landscape metrics calculation
rasterstats>=0.19.0             # Raster-vector statistics
whitebox>=2.2.0                 # Advanced geospatial analysis

# ============================================================================
# PRODUCTION & API DEVELOPMENT
# ============================================================================

# Web API Framework
fastapi>=0.100.0                # Modern web framework
uvicorn[standard]>=0.23.0       # ASGI server
pydantic>=2.0.0                 # Data validation
python-multipart>=0.0.6        # File upload support

# Caching & Message Queues
redis>=4.6.0                    # In-memory data structure store
celery>=5.3.0                   # Distributed task queue
flower>=2.0.0                   # Celery monitoring

# Database & Storage
sqlalchemy>=2.0.0               # SQL toolkit and ORM
psycopg2-binary>=2.9.0          # PostgreSQL adapter
alembic>=1.11.0                 # Database migrations

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================

# Logging & Monitoring
loguru>=0.7.0                   # Enhanced logging
prometheus-client>=0.17.0       # Metrics collection
structlog>=23.1.0               # Structured logging

# Model Monitoring
mlflow>=2.5.0                   # ML model lifecycle management
wandb>=0.15.0                   # Experiment tracking
evidently>=0.4.0                # ML model monitoring

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Testing Framework
pytest>=7.4.0                   # Testing framework
pytest-asyncio>=0.21.0          # Async testing
pytest-cov>=4.1.0               # Coverage reporting
httpx>=0.24.0                   # HTTP client for testing

# Code Quality
black>=23.0.0                   # Code formatting
isort>=5.12.0                   # Import sorting
flake8>=6.0.0                   # Linting
mypy>=1.4.0                     # Type checking

# Documentation
sphinx>=7.0.0                   # Documentation generator
sphinx-rtd-theme>=1.3.0         # ReadTheDocs theme
mkdocs>=1.5.0                   # Markdown documentation
mkdocs-material>=9.1.0          # Material theme

# ============================================================================
# CONTAINERIZATION & DEPLOYMENT
# ============================================================================

# Docker & Kubernetes
docker>=6.0.0                   # Container management
kubernetes>=27.0.0              # Kubernetes client
# helm>=3.0.0                     # Kubernetes package manager (use system install)

# ============================================================================
# PLATFORM-SPECIFIC OPTIMIZATIONS
# ============================================================================

# GPU Acceleration (CUDA)
# Note: Install based on your CUDA version
# torch==2.0.0+cu118 -f https://download.pytorch.org/whl/torch_stable.html
# torchvision==0.15.0+cu118 -f https://download.pytorch.org/whl/torch_stable.html

# macOS Optimizations
# Note: For Apple Silicon Macs
# tensorflow-macos>=2.13.0      # macOS-optimized TensorFlow
# tensorflow-metal>=1.0.0       # Metal GPU acceleration

# ============================================================================
# INSTALLATION NOTES
# ============================================================================

# 1. Install base requirements first:
#    pip install -r requirements.txt

# 2. Install ML integration requirements:
#    pip install -r requirements_ml_integration.txt

# 3. For development:
#    pip install -r requirements_ml_integration.txt[dev]

# 4. For production:
#    pip install -r requirements_ml_integration.txt[prod]

# 5. Platform-specific installations:
#    - CUDA: Install PyTorch with CUDA support
#    - macOS: Install TensorFlow with Metal support
#    - Linux: Standard installation should work

# ============================================================================
# MEMORY & PERFORMANCE REQUIREMENTS
# ============================================================================

# Minimum System Requirements:
# - RAM: 16GB (32GB recommended)
# - GPU: 8GB VRAM (16GB+ recommended)
# - Storage: 100GB+ for models and data
# - CPU: 8+ cores

# Production Requirements:
# - RAM: 64GB+ 
# - GPU: NVIDIA A100 or equivalent
# - Storage: 1TB+ NVMe SSD
# - CPU: 16+ cores
# - Network: High-speed internet for model downloads
